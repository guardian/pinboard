// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PinBoardStack's generated CloudFormation matches the snapshot 1`] = `
Object {
  "Metadata": Object {
    "gu:cdk:constructs": Array [
      "GuSubnetListParameter",
      "GuVpcParameter",
      "GuAmiParameter",
      "GuDistributionBucketParameter",
      "GuInstanceRole",
      "GuSsmSshPolicy",
      "GuDescribeEC2Policy",
      "GuLoggingStreamNameParameter",
      "GuLogShippingPolicy",
      "GuGetDistributablePolicy",
      "GuParameterStoreReadPolicy",
      "GuHttpsEgressSecurityGroup",
      "GuWazuhAccess",
      "GuAutoScalingGroup",
      "GuAlarm",
      "GuScheduledLambda",
      "GuLambdaErrorPercentageAlarm",
      "GuCname",
      "GuCname",
      "GuCname",
      "GuLambdaFunction",
      "GuLambdaErrorPercentageAlarm",
      "GuAlarm",
    ],
    "gu:cdk:version": "60.1.3",
  },
  "Outputs": Object {
    "BootstrappingLambdaFunctionName": Object {
      "Description": "pinboard-bootstrapping-lambda-TEST function name",
      "Export": Object {
        "Name": "pinboard-bootstrapping-lambda-TEST-function-name",
      },
      "Value": Object {
        "Ref": "pinboardbootstrappinglambdaD2C487DA",
      },
    },
    "pinboardbootstrappinglambdaapiEndpoint4DE1E032": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "pinboardbootstrappinglambdaapi577E85F1",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "pinboardbootstrappinglambdaapiDeploymentStageapiD49BFB3C",
            },
            "/",
          ],
        ],
      },
    },
    "pinboardbootstrappinglambdaapihostname": Object {
      "Description": "pinboard-bootstrapping-lambda-api-hostname",
      "Value": Object {
        "Fn::GetAtt": Array [
          "pinboardbootstrappinglambdaapidomainname9CF70B03",
          "RegionalDomainName",
        ],
      },
    },
  },
  "Parameters": Object {
    "AMIPinboard": Object {
      "Description": "Amazon Machine Image ID for the app pinboard. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "DistributionBucketName": Object {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "LoggingStreamName": Object {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuepinboardsentryDSNC96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/pinboard/sentryDSN",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "VpcId": Object {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
    "pinboardPrivateSubnets": Object {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
  },
  "Resources": Object {
    "ArchiverLambda63644BDF": Object {
      "DependsOn": Array [
        "ArchiverLambdaServiceRoleDefaultPolicyF9A2D388",
        "ArchiverLambdaServiceRoleEAB58FB0",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "workflow/TEST/pinboard/pinboard-archiver-lambda.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "APP": "pinboard",
            "DATABASE_HOSTNAME": Object {
              "Fn::GetAtt": Array [
                "DatabaseDatabaseProxy537ACFCB",
                "Endpoint",
              ],
            },
            "STACK": "workflow",
            "STAGE": "TEST",
          },
        },
        "FunctionName": "pinboard-archiver-lambda-TEST",
        "Handler": "index.handler",
        "LoggingConfig": Object {
          "LogFormat": "JSON",
        },
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ArchiverLambdaServiceRoleEAB58FB0",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 30,
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "DatabaseSecurityGroup7319C0F6",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Object {
            "Ref": "pinboardPrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ArchiverLambdaArchiverLambdarate6hours06945DE47": Object {
      "Properties": Object {
        "Description": "Run every 6 hours to ensure pinboards get cleaned out regularly",
        "ScheduleExpression": "rate(6 hours)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "ArchiverLambda63644BDF",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ArchiverLambdaArchiverLambdarate6hours0AllowEventRulePinBoardStackTESTArchiverLambda6D31B8D3BE725B87": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ArchiverLambda63644BDF",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "ArchiverLambdaArchiverLambdarate6hours06945DE47",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ArchiverLambdaErrorPercentageAlarmForLambda974BA75F": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:aws:sns:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":Cloudwatch-Alerts",
              ],
            ],
          },
        ],
        "AlarmDescription": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "ArchiverLambda63644BDF",
              },
              " exceeded 0% error rate",
            ],
          ],
        },
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "High error percentage from ",
              Object {
                "Ref": "ArchiverLambda63644BDF",
              },
              " lambda in TEST",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": Array [
          Object {
            "Expression": "100*m1/m2",
            "Id": "expr_1",
            "Label": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "Error % of ",
                  Object {
                    "Ref": "ArchiverLambda63644BDF",
                  },
                ],
              ],
            },
          },
          Object {
            "Id": "m1",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "ArchiverLambda63644BDF",
                    },
                  },
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          Object {
            "Id": "m2",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "ArchiverLambda63644BDF",
                    },
                  },
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "OKActions": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:aws:sns:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":Cloudwatch-Alerts",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ArchiverLambdaServiceRoleDefaultPolicyF9A2D388": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DistributionBucketName",
                      },
                      "/workflow/TEST/pinboard/pinboard-archiver-lambda.zip",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/workflow/pinboard",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/workflow/pinboard/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "pinboardworkflowbridgelambda30D4AA22",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "pinboardworkflowbridgelambda30D4AA22",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    Object {
                      "Fn::Select": Array [
                        6,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Fn::GetAtt": Array [
                                "DatabaseDatabaseProxy537ACFCB",
                                "DBProxyArn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    Object {
                      "Ref": "DatabaseSecretAttachmentE5D1B020",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ArchiverLambdaServiceRoleDefaultPolicyF9A2D388",
        "Roles": Array [
          Object {
            "Ref": "ArchiverLambdaServiceRoleEAB58FB0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ArchiverLambdaServiceRoleEAB58FB0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatabaseB269D8BB": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AllocatedStorage": "20",
        "AssociatedRoles": Array [
          Object {
            "FeatureName": "Lambda",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "RoleToInvokeLambdaFromRDSBC4A09D0",
                "Arn",
              ],
            },
          },
        ],
        "AutoMinorVersionUpgrade": true,
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t4g.micro",
        "DBInstanceIdentifier": "pinboard-db-test",
        "DBName": "pinboard",
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseSubnetGroup7D60F180",
        },
        "DeleteAutomatedBackups": false,
        "DeletionProtection": true,
        "EnableIAMDatabaseAuthentication": true,
        "Engine": "postgres",
        "EngineVersion": "13.7",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "PinBoardStackTESTDatabaseSecret441509D93fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "pinboard",
        "MultiAZ": false,
        "Port": "5432",
        "PubliclyAccessible": false,
        "StorageEncrypted": true,
        "StorageType": "gp2",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "DatabaseSecurityGroup5C91FDCB",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Retain",
    },
    "DatabaseDatabaseProxy537ACFCB": Object {
      "Properties": Object {
        "Auth": Array [
          Object {
            "AuthScheme": "SECRETS",
            "IAMAuth": "REQUIRED",
            "SecretArn": Object {
              "Ref": "DatabaseSecretAttachmentE5D1B020",
            },
          },
        ],
        "DBProxyName": "pinboard-database-proxy-TEST",
        "EngineFamily": "POSTGRESQL",
        "RequireTLS": true,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "DatabaseDatabaseProxyIAMRoleFD415DDD",
            "Arn",
          ],
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "DatabaseDatabaseProxyProxySecurityGroup62D74C1F",
              "GroupId",
            ],
          },
        ],
        "VpcSubnetIds": Object {
          "Ref": "pinboardPrivateSubnets",
        },
      },
      "Type": "AWS::RDS::DBProxy",
    },
    "DatabaseDatabaseProxyIAMRoleDefaultPolicyB21E77C5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DatabaseSecretAttachmentE5D1B020",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DatabaseDatabaseProxyIAMRoleDefaultPolicyB21E77C5",
        "Roles": Array [
          Object {
            "Ref": "DatabaseDatabaseProxyIAMRoleFD415DDD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DatabaseDatabaseProxyIAMRoleFD415DDD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "rds.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatabaseDatabaseProxyProxySecurityGroup62D74C1F": Object {
      "Properties": Object {
        "GroupDescription": "SecurityGroup for Database Proxy",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DatabaseDatabaseProxyProxyTargetGroupFF78BEFD": Object {
      "Properties": Object {
        "ConnectionPoolConfigurationInfo": Object {},
        "DBInstanceIdentifiers": Array [
          Object {
            "Ref": "DatabaseB269D8BB",
          },
        ],
        "DBProxyName": Object {
          "Ref": "DatabaseDatabaseProxy537ACFCB",
        },
        "TargetGroupName": "default",
      },
      "Type": "AWS::RDS::DBProxyTargetGroup",
    },
    "DatabaseJumpHostASGPinboardASGF107AC84": Object {
      "Properties": Object {
        "AutoScalingGroupName": "pinboard-database-jump-host-ASG-TEST",
        "LaunchTemplate": Object {
          "LaunchTemplateId": Object {
            "Ref": "workflowTESTpinboardA2C40456",
          },
          "Version": Object {
            "Fn::GetAtt": Array [
              "workflowTESTpinboardA2C40456",
              "LatestVersionNumber",
            ],
          },
        },
        "MaxSize": "1",
        "MetricsCollection": Array [
          Object {
            "Granularity": "1Minute",
            "Metrics": Array [
              "GroupInServiceInstances",
            ],
          },
        ],
        "MinSize": "0",
        "Tags": Array [
          Object {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
        ],
        "VPCZoneIdentifier": Object {
          "Ref": "pinboardPrivateSubnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "DatabaseJumpHostOverrunningAlarmF19948C2": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:aws:sns:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":Cloudwatch-Alerts",
              ],
            ],
          },
        ],
        "AlarmDescription": "The pinboard database 'jump host' should not run for more than 12 hours as it suggests the mechanism to shut it down when it's idle looks to be broken",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "DatabaseJumpHostASGPinboardASGF107AC84",
              },
              " instance running for more than 12 hours",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": Array [
          Object {
            "Name": "AutoScalingGroupName",
            "Value": Object {
              "Ref": "DatabaseJumpHostASGPinboardASGF107AC84",
            },
          },
        ],
        "EvaluationPeriods": 12,
        "MetricName": "GroupInServiceInstances",
        "Namespace": "AWS/AutoScaling",
        "OKActions": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:aws:sns:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":Cloudwatch-Alerts",
              ],
            ],
          },
        ],
        "Period": 3600,
        "Statistic": "Average",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Threshold": 0,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "DatabaseSecretAttachmentE5D1B020": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "PinBoardStackTESTDatabaseSecret441509D93fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "DatabaseB269D8BB",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "DatabaseSecurityGroup5C91FDCB": Object {
      "Properties": Object {
        "GroupDescription": "Security group for Database database",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DatabaseSecurityGroup7319C0F6": Object {
      "Properties": Object {
        "GroupDescription": "PinBoardStack-TEST/DatabaseSecurityGroup",
        "GroupName": "PinboardDatabaseSecurityGroupTEST",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "77.91.248.0/21",
            "Description": "Allow SSH for tunneling purposes when this security group is reused for database jump host.",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DatabaseSecurityGroupfromPinBoardStackTESTDatabaseDatabaseProxyProxySecurityGroupE5511BBEIndirectPortB75FB8BC": Object {
      "Properties": Object {
        "Description": "Allow connections to the database Instance from the Proxy",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseB269D8BB",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "DatabaseSecurityGroup5C91FDCB",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "DatabaseDatabaseProxyProxySecurityGroup62D74C1F",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseB269D8BB",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseSubnetGroup7D60F180": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for Database database",
        "SubnetIds": Object {
          "Ref": "pinboardPrivateSubnets",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "DescribeEC2PolicyFF5F9295": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRolePinboard534D1FFA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EmailIdentity7187767D": Object {
      "Properties": Object {
        "EmailIdentity": "pinboard.test.dev-gutools.co.uk",
      },
      "Type": "AWS::SES::EmailIdentity",
    },
    "EmailIdentityDkim0": Object {
      "Properties": Object {
        "Name": Object {
          "Fn::GetAtt": Array [
            "EmailIdentity7187767D",
            "DkimDNSTokenName1",
          ],
        },
        "RecordType": "CNAME",
        "ResourceRecords": Array [
          Object {
            "Fn::GetAtt": Array [
              "EmailIdentity7187767D",
              "DkimDNSTokenValue1",
            ],
          },
        ],
        "Stage": "TEST",
        "TTL": 3600,
      },
      "Type": "Guardian::DNS::RecordSet",
    },
    "EmailIdentityDkim1": Object {
      "Properties": Object {
        "Name": Object {
          "Fn::GetAtt": Array [
            "EmailIdentity7187767D",
            "DkimDNSTokenName2",
          ],
        },
        "RecordType": "CNAME",
        "ResourceRecords": Array [
          Object {
            "Fn::GetAtt": Array [
              "EmailIdentity7187767D",
              "DkimDNSTokenValue2",
            ],
          },
        ],
        "Stage": "TEST",
        "TTL": 3600,
      },
      "Type": "Guardian::DNS::RecordSet",
    },
    "EmailIdentityDkim2": Object {
      "Properties": Object {
        "Name": Object {
          "Fn::GetAtt": Array [
            "EmailIdentity7187767D",
            "DkimDNSTokenName3",
          ],
        },
        "RecordType": "CNAME",
        "ResourceRecords": Array [
          Object {
            "Fn::GetAtt": Array [
              "EmailIdentity7187767D",
              "DkimDNSTokenValue3",
            ],
          },
        ],
        "Stage": "TEST",
        "TTL": 3600,
      },
      "Type": "Guardian::DNS::RecordSet",
    },
    "EmailLambda93E95E21": Object {
      "DependsOn": Array [
        "EmailLambdaServiceRoleDefaultPolicy23741915",
        "EmailLambdaServiceRoleCBE95916",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "workflow/TEST/pinboard/pinboard-email-lambda.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "APP": "pinboard",
            "DATABASE_HOSTNAME": Object {
              "Fn::GetAtt": Array [
                "DatabaseDatabaseProxy537ACFCB",
                "Endpoint",
              ],
            },
            "STACK": "workflow",
            "STAGE": "TEST",
          },
        },
        "FunctionName": "pinboard-email-lambda-TEST",
        "Handler": "index.handler",
        "LoggingConfig": Object {
          "LogFormat": "JSON",
        },
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "EmailLambdaServiceRoleCBE95916",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 30,
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "DatabaseSecurityGroup7319C0F6",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Object {
            "Ref": "pinboardPrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "EmailLambdaErrorPercentageAlarmForLambda75B2E289": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:aws:sns:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":Cloudwatch-Alerts",
              ],
            ],
          },
        ],
        "AlarmDescription": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "EmailLambda93E95E21",
              },
              " exceeded 0% error rate",
            ],
          ],
        },
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "High error percentage from ",
              Object {
                "Ref": "EmailLambda93E95E21",
              },
              " lambda in TEST",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": Array [
          Object {
            "Expression": "100*m1/m2",
            "Id": "expr_1",
            "Label": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "Error % of ",
                  Object {
                    "Ref": "EmailLambda93E95E21",
                  },
                ],
              ],
            },
          },
          Object {
            "Id": "m1",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "EmailLambda93E95E21",
                    },
                  },
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          Object {
            "Id": "m2",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "EmailLambda93E95E21",
                    },
                  },
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "OKActions": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:aws:sns:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":Cloudwatch-Alerts",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "EmailLambdaServiceRoleCBE95916": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EmailLambdaServiceRoleDefaultPolicy23741915": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ses:SendEmail",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ses:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":identity/",
                    Object {
                      "Ref": "EmailIdentity7187767D",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DistributionBucketName",
                      },
                      "/workflow/TEST/pinboard/pinboard-email-lambda.zip",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/workflow/pinboard",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/workflow/pinboard/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "pinboardworkflowbridgelambda30D4AA22",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "pinboardworkflowbridgelambda30D4AA22",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    Object {
                      "Fn::Select": Array [
                        6,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Fn::GetAtt": Array [
                                "DatabaseDatabaseProxy537ACFCB",
                                "DBProxyArn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    Object {
                      "Ref": "DatabaseSecretAttachmentE5D1B020",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EmailLambdaServiceRoleDefaultPolicy23741915",
        "Roles": Array [
          Object {
            "Ref": "EmailLambdaServiceRoleCBE95916",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicyPinboard553D3662": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:s3:::",
                    Object {
                      "Ref": "DistributionBucketName",
                    },
                    "/workflow/TEST/pinboard/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyPinboard553D3662",
        "Roles": Array [
          Object {
            "Ref": "InstanceRolePinboard534D1FFA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupPinboardD9B9237E": Object {
      "Properties": Object {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuLogShippingPolicy981BFE5A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:kinesis:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    Object {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": Array [
          Object {
            "Ref": "InstanceRolePinboard534D1FFA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "InstanceRolePinboard534D1FFA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "InstanceRolePinboardDefaultPolicy66C92FE8": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    Object {
                      "Fn::Select": Array [
                        6,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Fn::GetAtt": Array [
                                "DatabaseDatabaseProxy537ACFCB",
                                "DBProxyArn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    Object {
                      "Ref": "DatabaseSecretAttachmentE5D1B020",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
            Object {
              "Action": "autoscaling:SetDesiredCapacity",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:autoscaling:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":*/pinboard-database-jump-host-ASG-TEST",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "InstanceRolePinboardDefaultPolicy66C92FE8",
        "Roles": Array [
          Object {
            "Ref": "InstanceRolePinboard534D1FFA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ParameterStoreReadPinboard2639F7F2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/workflow/pinboard",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/workflow/pinboard/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRolePinboard534D1FFA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PinBoardStackTESTDatabaseSecret441509D93fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"pinboard\\"}",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "RoleToInvokeLambdaFromRDSBC4A09D0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "rds.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Give pinboard RDS Postgres instance permission to invoke certain lambdas",
        "RoleName": "pinboard-invoke-lambda-from-RDS-database-TEST",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RoleToInvokeLambdaFromRDSDefaultPolicyE1933D63": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "pinboardnotificationslambdaC35CECF7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "pinboardnotificationslambdaC35CECF7",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "EmailLambda93E95E21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "EmailLambda93E95E21",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RoleToInvokeLambdaFromRDSDefaultPolicyE1933D63",
        "Roles": Array [
          Object {
            "Ref": "RoleToInvokeLambdaFromRDSBC4A09D0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SsmSshPolicy4CFC977E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply",
                "ssm:UpdateInstanceInformation",
                "ssm:ListInstanceAssociations",
                "ssm:DescribeInstanceProperties",
                "ssm:DescribeDocumentParameters",
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ssm-ssh-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRolePinboard534D1FFA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WazuhSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh event logging",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1514,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh agent registration",
            "FromPort": 1515,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "databaseProxySecurityGroupfromIndirectPeer5432453AB7EA": Object {
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Allow PinboardDatabaseSecurityGroupTEST to connect to the ",
              Object {
                "Ref": "DatabaseDatabaseProxy537ACFCB",
              },
            ],
          ],
        },
        "FromPort": 5432,
        "GroupId": Object {
          "Fn::Select": Array [
            0,
            Array [
              Object {
                "Fn::GetAtt": Array [
                  "DatabaseDatabaseProxyProxySecurityGroup62D74C1F",
                  "GroupId",
                ],
              },
            ],
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "DatabaseSecurityGroup7319C0F6",
            "GroupId",
          ],
        },
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "pinboardappsyncapi9D519400": Object {
      "Properties": Object {
        "AuthenticationType": "AWS_LAMBDA",
        "LambdaAuthorizerConfig": Object {
          "AuthorizerResultTtlInSeconds": 30,
          "AuthorizerUri": Object {
            "Fn::GetAtt": Array [
              "pinboardauthlambdaC1D899AE",
              "Arn",
            ],
          },
        },
        "Name": "pinboard-appsync-api-TEST",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "XrayEnabled": true,
      },
      "Type": "AWS::AppSync::GraphQLApi",
    },
    "pinboardappsyncapiSchema868D9F5B": Object {
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "Definition": "schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Query {
  # database-bridge-lambda queries
  listItems(pinboardId: String!, maybeAspectRatioFilter: String): [Item]
  listLastItemSeenByUsers(pinboardId: String!): [LastItemSeenByUser]
  getMyUser: MyUser
  searchMentionableUsers(prefix: String!): UsersAndGroups
  getUsers(emails: [String!]!): [User]
  getGroupPinboardIds: [PinboardIdWithClaimCounts!]!
  getItemCounts(pinboardIds: [String!]!): [PinboardIdWithItemCounts!]!
  # workflow-bridge-lambda queries
  listPinboards(searchText: String): [WorkflowStub]
  getPinboardsByIds(ids: [String!]!): [WorkflowStub]
  getPinboardsByPaths(paths: [String!]!): [WorkflowStub]
  getPinboardByComposerId(composerId: String!): WorkflowStub
  # grid-bridge-lambda queries
  getGridSearchSummary(apiUrl: String!): GridSearchSummary
  asGridPayload(gridUrl: String!): AWSJSON
}

type Mutation {
  createItem(input: CreateItemInput!): Item
  editItem(itemId: String!, input: EditItemInput!): Item
  deleteItem(itemId: String!): Item
  claimItem(itemId: String!): Claimed
  seenItem(input: LastItemSeenByUserInput!): LastItemSeenByUser
  setWebPushSubscriptionForUser(webPushSubscription: AWSJSON): MyUser
  addManuallyOpenedPinboardIds(pinboardId: String!, maybeEmailOverride: String): MyUser
  removeManuallyOpenedPinboardIds(pinboardIdToClose: String!): MyUser
  visitTourStep(tourStepId: String!): MyUser
  changeFeatureFlag(flagId: String!, newValue: Boolean!): MyUser
}

type Subscription {
  onMutateItem(
    pinboardId: String
  ): Item @aws_subscribe(mutations: [\\"createItem\\", \\"editItem\\", \\"deleteItem\\"])

  onClaimItem(
    pinboardId: String
  ): Claimed @aws_subscribe(mutations: [\\"claimItem\\"])

  onSeenItem(
    pinboardId: String
  ): LastItemSeenByUser @aws_subscribe(mutations: [\\"seenItem\\"])

  onMyUserChanges(
    email: String! # unfortunately this can't be done via 'identity' in the resolver
  ): MyUser @aws_subscribe(mutations: [
    \\"addManuallyOpenedPinboardIds\\",
    \\"removeManuallyOpenedPinboardIds\\",
    \\"changeFeatureFlag\\"
  ])
}

type MentionHandle {
  label: String!
  isMe: Boolean!
}

type Item {
  id: ID!
  message: String
  payload: AWSJSON
  timestamp: AWSDateTime!
  type: String!
  userEmail: String!
  pinboardId: String!
  mentions: [MentionHandle!]
  groupMentions: [MentionHandle!]
  claimedByEmail: String
  claimable: Boolean!
  relatedItemId: String
  editHistory: [AWSDateTime!]
  deletedAt: AWSDateTime
}

type LastItemSeenByUser {
  pinboardId: String!
  userEmail: String!
  itemID: String!
  seenAt: AWSDateTime!
}

type User {
  email: String!
  firstName: String!
  lastName: String!
  avatarUrl: String
  isMentionable: Boolean
}
type MyUser {
  email: String!
  firstName: String!
  lastName: String!
  avatarUrl: String
  hasWebPushSubscription: Boolean
  manuallyOpenedPinboardIds: [String!]
  hasEverUsedTour: Boolean!
  featureFlags: AWSJSON
}

type Group {
  shorthand: String!
  name: String!
  memberEmails: [String!]!
}

type UsersAndGroups {
  users: [User!]!
  groups: [Group!]!
}

type WorkflowStub {
  id: String!
  title: String
  headline: String
  composerId: String
  path: String
  status: String
  trashed: Boolean
  isNotFound: Boolean
}

type GridBadgeData {
  text: String!
  color: String!
}

type GridSearchQueryBreakdown {
  collections: [GridBadgeData!]
  labels: [GridBadgeData!]
  chips: [GridBadgeData!]
  restOfSearch: String
}

type GridSearchSummary {
  total: Int!
  thumbnails: [String!]!
  queryBreakdown: GridSearchQueryBreakdown
}

input CreateItemInput {
  message: String
  payload: AWSJSON
  type: String!
  pinboardId: String!
  mentions: [String!]
  groupMentions: [String!]
  claimable: Boolean
  relatedItemId: String
}

input EditItemInput {
  message: String
  payload: AWSJSON
  type: String!
}

input LastItemSeenByUserInput {
  pinboardId: String!
  itemID: String!
}

type Claimed {
  pinboardId: String!
  updatedItem: Item!
  newItem: Item!
}

type PinboardIdWithClaimCounts {
  pinboardId: String!
  unclaimedCount: Int!
  yourClaimedCount: Int!
  othersClaimedCount: Int!
  notClaimableCount: Int!
  latestGroupMentionItemId: String!
  hasUnread: Boolean!
}

type PinboardIdWithItemCounts {
  pinboardId: String!
  unreadCount: Int!
  totalCount: Int!
  totalCropCount: Int!
  fiveByFourCount: Int!
  fourByFiveCount: Int!
}
",
      },
      "Type": "AWS::AppSync::GraphQLSchema",
    },
    "pinboardappsyncapidatabasebridgelambdads970CB9A7": Object {
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "LambdaConfig": Object {
          "LambdaFunctionArn": Object {
            "Fn::GetAtt": Array [
              "pinboarddatabasebridgelambda34091516",
              "Arn",
            ],
          },
        },
        "Name": "database_bridge_lambda_ds",
        "ServiceRoleArn": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapidatabasebridgelambdadsServiceRole5A08D697",
            "Arn",
          ],
        },
        "Type": "AWS_LAMBDA",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "pinboardappsyncapidatabasebridgelambdadsMutationaddManuallyOpenedPinboardIdsResolver28AE76DE": Object {
      "DependsOn": Array [
        "pinboardappsyncapidatabasebridgelambdads970CB9A7",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "database_bridge_lambda_ds",
        "FieldName": "addManuallyOpenedPinboardIds",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapidatabasebridgelambdadsMutationchangeFeatureFlagResolver77AF20F3": Object {
      "DependsOn": Array [
        "pinboardappsyncapidatabasebridgelambdads970CB9A7",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "database_bridge_lambda_ds",
        "FieldName": "changeFeatureFlag",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapidatabasebridgelambdadsMutationclaimItemResolver6F8C5586": Object {
      "DependsOn": Array [
        "pinboardappsyncapidatabasebridgelambdads970CB9A7",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "database_bridge_lambda_ds",
        "FieldName": "claimItem",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapidatabasebridgelambdadsMutationcreateItemResolverF3DD77B1": Object {
      "DependsOn": Array [
        "pinboardappsyncapidatabasebridgelambdads970CB9A7",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "database_bridge_lambda_ds",
        "FieldName": "createItem",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapidatabasebridgelambdadsMutationdeleteItemResolver07106CF7": Object {
      "DependsOn": Array [
        "pinboardappsyncapidatabasebridgelambdads970CB9A7",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "database_bridge_lambda_ds",
        "FieldName": "deleteItem",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapidatabasebridgelambdadsMutationeditItemResolver263505C3": Object {
      "DependsOn": Array [
        "pinboardappsyncapidatabasebridgelambdads970CB9A7",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "database_bridge_lambda_ds",
        "FieldName": "editItem",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapidatabasebridgelambdadsMutationremoveManuallyOpenedPinboardIdsResolver865937F3": Object {
      "DependsOn": Array [
        "pinboardappsyncapidatabasebridgelambdads970CB9A7",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "database_bridge_lambda_ds",
        "FieldName": "removeManuallyOpenedPinboardIds",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapidatabasebridgelambdadsMutationseenItemResolver502C087E": Object {
      "DependsOn": Array [
        "pinboardappsyncapidatabasebridgelambdads970CB9A7",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "database_bridge_lambda_ds",
        "FieldName": "seenItem",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapidatabasebridgelambdadsMutationsetWebPushSubscriptionForUserResolver3B67A566": Object {
      "DependsOn": Array [
        "pinboardappsyncapidatabasebridgelambdads970CB9A7",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "database_bridge_lambda_ds",
        "FieldName": "setWebPushSubscriptionForUser",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapidatabasebridgelambdadsMutationvisitTourStepResolver3C2B9D56": Object {
      "DependsOn": Array [
        "pinboardappsyncapidatabasebridgelambdads970CB9A7",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "database_bridge_lambda_ds",
        "FieldName": "visitTourStep",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapidatabasebridgelambdadsQuerygetGroupPinboardIdsResolverDB64DD8F": Object {
      "DependsOn": Array [
        "pinboardappsyncapidatabasebridgelambdads970CB9A7",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "database_bridge_lambda_ds",
        "FieldName": "getGroupPinboardIds",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapidatabasebridgelambdadsQuerygetItemCountsResolver83B493C3": Object {
      "DependsOn": Array [
        "pinboardappsyncapidatabasebridgelambdads970CB9A7",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "database_bridge_lambda_ds",
        "FieldName": "getItemCounts",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapidatabasebridgelambdadsQuerygetMyUserResolverD2F32419": Object {
      "DependsOn": Array [
        "pinboardappsyncapidatabasebridgelambdads970CB9A7",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "database_bridge_lambda_ds",
        "FieldName": "getMyUser",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapidatabasebridgelambdadsQuerygetUsersResolver1122D64B": Object {
      "DependsOn": Array [
        "pinboardappsyncapidatabasebridgelambdads970CB9A7",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "database_bridge_lambda_ds",
        "FieldName": "getUsers",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapidatabasebridgelambdadsQuerylistItemsResolver88BD585F": Object {
      "DependsOn": Array [
        "pinboardappsyncapidatabasebridgelambdads970CB9A7",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "database_bridge_lambda_ds",
        "FieldName": "listItems",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapidatabasebridgelambdadsQuerylistLastItemSeenByUsersResolver579A4481": Object {
      "DependsOn": Array [
        "pinboardappsyncapidatabasebridgelambdads970CB9A7",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "database_bridge_lambda_ds",
        "FieldName": "listLastItemSeenByUsers",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapidatabasebridgelambdadsQuerysearchMentionableUsersResolver81EB32B3": Object {
      "DependsOn": Array [
        "pinboardappsyncapidatabasebridgelambdads970CB9A7",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "database_bridge_lambda_ds",
        "FieldName": "searchMentionableUsers",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapidatabasebridgelambdadsServiceRole5A08D697": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "pinboardappsyncapidatabasebridgelambdadsServiceRoleDefaultPolicyF3582502": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "pinboarddatabasebridgelambda34091516",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "pinboarddatabasebridgelambda34091516",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "pinboardappsyncapidatabasebridgelambdadsServiceRoleDefaultPolicyF3582502",
        "Roles": Array [
          Object {
            "Ref": "pinboardappsyncapidatabasebridgelambdadsServiceRole5A08D697",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "pinboardappsyncapigridbridgelambdads1C89A823": Object {
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "LambdaConfig": Object {
          "LambdaFunctionArn": Object {
            "Fn::GetAtt": Array [
              "pinboardgridbridgelambda79AD9656",
              "Arn",
            ],
          },
        },
        "Name": "grid_bridge_lambda_ds",
        "ServiceRoleArn": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapigridbridgelambdadsServiceRole186C7FDF",
            "Arn",
          ],
        },
        "Type": "AWS_LAMBDA",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "pinboardappsyncapigridbridgelambdadsQueryasGridPayloadResolver57F5D7B0": Object {
      "DependsOn": Array [
        "pinboardappsyncapigridbridgelambdads1C89A823",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "grid_bridge_lambda_ds",
        "FieldName": "asGridPayload",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapigridbridgelambdadsQuerygetGridSearchSummaryResolverA1738BE2": Object {
      "DependsOn": Array [
        "pinboardappsyncapigridbridgelambdads1C89A823",
        "pinboardappsyncapiSchema868D9F5B",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "grid_bridge_lambda_ds",
        "FieldName": "getGridSearchSummary",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapigridbridgelambdadsServiceRole186C7FDF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "pinboardappsyncapigridbridgelambdadsServiceRoleDefaultPolicy1506B891": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "pinboardgridbridgelambda79AD9656",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "pinboardgridbridgelambda79AD9656",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "pinboardappsyncapigridbridgelambdadsServiceRoleDefaultPolicy1506B891",
        "Roles": Array [
          Object {
            "Ref": "pinboardappsyncapigridbridgelambdadsServiceRole186C7FDF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "pinboardappsyncapiworkflowbridgelambdadsD8193E3E": Object {
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "LambdaConfig": Object {
          "LambdaFunctionArn": Object {
            "Fn::GetAtt": Array [
              "pinboardworkflowbridgelambda30D4AA22",
              "Arn",
            ],
          },
        },
        "Name": "workflow_bridge_lambda_ds",
        "ServiceRoleArn": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapiworkflowbridgelambdadsServiceRoleB609ECB6",
            "Arn",
          ],
        },
        "Type": "AWS_LAMBDA",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "pinboardappsyncapiworkflowbridgelambdadsQuerygetPinboardByComposerIdResolver9149DEAB": Object {
      "DependsOn": Array [
        "pinboardappsyncapiSchema868D9F5B",
        "pinboardappsyncapiworkflowbridgelambdadsD8193E3E",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "workflow_bridge_lambda_ds",
        "FieldName": "getPinboardByComposerId",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapiworkflowbridgelambdadsQuerygetPinboardsByIdsResolver89DAB24F": Object {
      "DependsOn": Array [
        "pinboardappsyncapiSchema868D9F5B",
        "pinboardappsyncapiworkflowbridgelambdadsD8193E3E",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "workflow_bridge_lambda_ds",
        "FieldName": "getPinboardsByIds",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapiworkflowbridgelambdadsQuerygetPinboardsByPathsResolver98DFC3B6": Object {
      "DependsOn": Array [
        "pinboardappsyncapiSchema868D9F5B",
        "pinboardappsyncapiworkflowbridgelambdadsD8193E3E",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "workflow_bridge_lambda_ds",
        "FieldName": "getPinboardsByPaths",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapiworkflowbridgelambdadsQuerylistPinboardsResolver8054A8C9": Object {
      "DependsOn": Array [
        "pinboardappsyncapiSchema868D9F5B",
        "pinboardappsyncapiworkflowbridgelambdadsD8193E3E",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "pinboardappsyncapi9D519400",
            "ApiId",
          ],
        },
        "DataSourceName": "workflow_bridge_lambda_ds",
        "FieldName": "listPinboards",
        "Kind": "UNIT",
        "ResponseMappingTemplate": "## schema checksum : af8a4c1d6bcf5d68837b1d756334f705
$util.toJson($ctx.result)",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "pinboardappsyncapiworkflowbridgelambdadsServiceRoleB609ECB6": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "pinboardappsyncapiworkflowbridgelambdadsServiceRoleDefaultPolicyD52BFE16": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "pinboardworkflowbridgelambda30D4AA22",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "pinboardworkflowbridgelambda30D4AA22",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "pinboardappsyncapiworkflowbridgelambdadsServiceRoleDefaultPolicyD52BFE16",
        "Roles": Array [
          Object {
            "Ref": "pinboardappsyncapiworkflowbridgelambdadsServiceRoleB609ECB6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "pinboardauthlambdaC1D899AE": Object {
      "DependsOn": Array [
        "pinboardauthlambdaServiceRoleDefaultPolicy1088BF31",
        "pinboardauthlambdaServiceRole8197EA98",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": "workflow-dist",
          "S3Key": "workflow/TEST/pinboard-auth-lambda/pinboard-auth-lambda.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "APP": "pinboard",
            "STACK": "workflow",
            "STAGE": "TEST",
          },
        },
        "FunctionName": "pinboard-auth-lambda-TEST",
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "pinboardauthlambdaServiceRole8197EA98",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 11,
      },
      "Type": "AWS::Lambda::Function",
    },
    "pinboardauthlambdaServiceRole8197EA98": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "pinboardauthlambdaServiceRoleDefaultPolicy1088BF31": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::pan-domain-auth-settings/*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "pinboardauthlambdaServiceRoleDefaultPolicy1088BF31",
        "Roles": Array [
          Object {
            "Ref": "pinboardauthlambdaServiceRole8197EA98",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "pinboardauthlambdaappsync13E2B14E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "pinboardauthlambdaC1D899AE",
            "Arn",
          ],
        },
        "Principal": "appsync.amazonaws.com",
      },
      "Type": "AWS::Lambda::Permission",
    },
    "pinboardbootstrappinglambdaD2C487DA": Object {
      "DependsOn": Array [
        "pinboardbootstrappinglambdaServiceRoleDefaultPolicy1B5EE4F9",
        "pinboardbootstrappinglambdaServiceRoleE9E1278C",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": "workflow-dist",
          "S3Key": "workflow/TEST/pinboard-bootstrapping-lambda-api/pinboard-bootstrapping-lambda-api.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "APP": "pinboard",
            "GRAPHQL_ENDPOINT": Object {
              "Fn::GetAtt": Array [
                "pinboardappsyncapi9D519400",
                "GraphQLUrl",
              ],
            },
            "SENTRY_DSN": Object {
              "Ref": "SsmParameterValuepinboardsentryDSNC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
            "STACK": "workflow",
            "STAGE": "TEST",
          },
        },
        "FunctionName": "pinboard-bootstrapping-lambda-TEST",
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "pinboardbootstrappinglambdaServiceRoleE9E1278C",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "pinboardbootstrappinglambdaServiceRoleDefaultPolicy1B5EE4F9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::pan-domain-auth-settings/*",
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::permissions-cache/TEST/*",
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:lambda:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":function:pinboard-database-bridge-lambda-TEST",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "pinboardbootstrappinglambdaServiceRoleDefaultPolicy1B5EE4F9",
        "Roles": Array [
          Object {
            "Ref": "pinboardbootstrappinglambdaServiceRoleE9E1278C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "pinboardbootstrappinglambdaServiceRoleE9E1278C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "pinboardbootstrappinglambdaapi577E85F1": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "REGIONAL",
          ],
        },
        "MinimumCompressionSize": 0,
        "Name": "pinboard-bootstrapping-lambda-api-TEST",
        "Policy": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:execute-api:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "pinboardbootstrappinglambdaapiANY256CDED1": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "pinboardbootstrappinglambdaD2C487DA",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "pinboardbootstrappinglambdaapi577E85F1",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "pinboardbootstrappinglambdaapi577E85F1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "pinboardbootstrappinglambdaapiANYApiPermissionPinBoardStackTESTpinboardbootstrappinglambdaapi004924A9ANYBD2C8E55": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "pinboardbootstrappinglambdaD2C487DA",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "pinboardbootstrappinglambdaapi577E85F1",
              },
              "/",
              Object {
                "Ref": "pinboardbootstrappinglambdaapiDeploymentStageapiD49BFB3C",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "pinboardbootstrappinglambdaapiANYApiPermissionTestPinBoardStackTESTpinboardbootstrappinglambdaapi004924A9ANY9CE19753": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "pinboardbootstrappinglambdaD2C487DA",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "pinboardbootstrappinglambdaapi577E85F1",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "pinboardbootstrappinglambdaapiAccountF1D904A1": Object {
      "DeletionPolicy": "Retain",
      "DependsOn": Array [
        "pinboardbootstrappinglambdaapi577E85F1",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "pinboardbootstrappinglambdaapiCloudWatchRole71E5177D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "pinboardbootstrappinglambdaapiAlarmC961CA44": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:aws:sns:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":Cloudwatch-Alerts",
              ],
            ],
          },
        ],
        "AlarmDescription": "The pinboard-bootstrapping-lambda-api-TEST gateway is experiencing 5XX errors",
        "AlarmName": "pinboard-bootstrapping-lambda-api-TEST 5XX errors",
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": Array [
          Object {
            "Name": "ApiName",
            "Value": "pinboard-bootstrapping-lambda-api-TEST",
          },
        ],
        "EvaluationPeriods": 6,
        "MetricName": "5XXError",
        "Namespace": "AWS/ApiGateway",
        "OKActions": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:aws:sns:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":Cloudwatch-Alerts",
              ],
            ],
          },
        ],
        "Period": 300,
        "Statistic": "Average",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Threshold": 0.05,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "pinboardbootstrappinglambdaapiCloudWatchRole71E5177D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "pinboardbootstrappinglambdaapiDeploymentF3CA75CFe270fad6fc9f31dcfbf4b3f940a4080b": Object {
      "DependsOn": Array [
        "pinboardbootstrappinglambdaapiproxyANYABDEB60B",
        "pinboardbootstrappinglambdaapiproxyE53D56AC",
        "pinboardbootstrappinglambdaapiANY256CDED1",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "pinboardbootstrappinglambdaapi577E85F1",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "pinboardbootstrappinglambdaapiDeploymentStageapiD49BFB3C": Object {
      "DependsOn": Array [
        "pinboardbootstrappinglambdaapiAccountF1D904A1",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "pinboardbootstrappinglambdaapiDeploymentF3CA75CFe270fad6fc9f31dcfbf4b3f940a4080b",
        },
        "RestApiId": Object {
          "Ref": "pinboardbootstrappinglambdaapi577E85F1",
        },
        "StageName": "api",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "pinboardbootstrappinglambdaapicertificate387439C8": Object {
      "Properties": Object {
        "DomainName": "pinboard.test.dev-gutools.co.uk",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Name",
            "Value": "PinBoardStack-TEST/pinboard-bootstrapping-lambda-api-certificate",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
    },
    "pinboardbootstrappinglambdaapidomainname9CF70B03": Object {
      "Properties": Object {
        "DomainName": "pinboard.test.dev-gutools.co.uk",
        "EndpointConfiguration": Object {
          "Types": Array [
            "REGIONAL",
          ],
        },
        "RegionalCertificateArn": Object {
          "Ref": "pinboardbootstrappinglambdaapicertificate387439C8",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::ApiGateway::DomainName",
    },
    "pinboardbootstrappinglambdaapidomainnameMapPinBoardStackTESTpinboardbootstrappinglambdaapi004924A92F1518FA": Object {
      "Properties": Object {
        "BasePath": "",
        "DomainName": Object {
          "Ref": "pinboardbootstrappinglambdaapidomainname9CF70B03",
        },
        "RestApiId": Object {
          "Ref": "pinboardbootstrappinglambdaapi577E85F1",
        },
        "Stage": Object {
          "Ref": "pinboardbootstrappinglambdaapiDeploymentStageapiD49BFB3C",
        },
      },
      "Type": "AWS::ApiGateway::BasePathMapping",
    },
    "pinboardbootstrappinglambdaapiproxyANYABDEB60B": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "pinboardbootstrappinglambdaD2C487DA",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "pinboardbootstrappinglambdaapiproxyE53D56AC",
        },
        "RestApiId": Object {
          "Ref": "pinboardbootstrappinglambdaapi577E85F1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "pinboardbootstrappinglambdaapiproxyANYApiPermissionPinBoardStackTESTpinboardbootstrappinglambdaapi004924A9ANYproxyBEE3326C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "pinboardbootstrappinglambdaD2C487DA",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "pinboardbootstrappinglambdaapi577E85F1",
              },
              "/",
              Object {
                "Ref": "pinboardbootstrappinglambdaapiDeploymentStageapiD49BFB3C",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "pinboardbootstrappinglambdaapiproxyANYApiPermissionTestPinBoardStackTESTpinboardbootstrappinglambdaapi004924A9ANYproxyBB6FDCA4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "pinboardbootstrappinglambdaD2C487DA",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "pinboardbootstrappinglambdaapi577E85F1",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "pinboardbootstrappinglambdaapiproxyE53D56AC": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "pinboardbootstrappinglambdaapi577E85F1",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "pinboardbootstrappinglambdaapi577E85F1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "pinboarddatabasebridgelambda34091516": Object {
      "DependsOn": Array [
        "pinboarddatabasebridgelambdaServiceRoleDefaultPolicy7C65F827",
        "pinboarddatabasebridgelambdaServiceRole07A568AB",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": "workflow-dist",
          "S3Key": "workflow/TEST/pinboard-database-bridge-lambda/pinboard-database-bridge-lambda.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "APP": "pinboard",
            "DATABASE_HOSTNAME": Object {
              "Fn::GetAtt": Array [
                "DatabaseDatabaseProxy537ACFCB",
                "Endpoint",
              ],
            },
            "STACK": "workflow",
            "STAGE": "TEST",
          },
        },
        "FunctionName": "pinboard-database-bridge-lambda-TEST",
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "pinboarddatabasebridgelambdaServiceRole07A568AB",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 30,
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "DatabaseSecurityGroup7319C0F6",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Object {
            "Ref": "pinboardPrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "pinboarddatabasebridgelambdaServiceRole07A568AB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "pinboarddatabasebridgelambdaServiceRoleDefaultPolicy7C65F827": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::permissions-cache/TEST/*",
            },
            Object {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    Object {
                      "Fn::Select": Array [
                        6,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Fn::GetAtt": Array [
                                "DatabaseDatabaseProxy537ACFCB",
                                "DBProxyArn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    Object {
                      "Ref": "DatabaseSecretAttachmentE5D1B020",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "pinboarddatabasebridgelambdaServiceRoleDefaultPolicy7C65F827",
        "Roles": Array [
          Object {
            "Ref": "pinboarddatabasebridgelambdaServiceRole07A568AB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "pinboardgridbridgelambda79AD9656": Object {
      "DependsOn": Array [
        "pinboardgridbridgelambdaServiceRoleDefaultPolicyFB133D07",
        "pinboardgridbridgelambdaServiceRole33502BD3",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": "workflow-dist",
          "S3Key": "workflow/TEST/pinboard-grid-bridge-lambda/pinboard-grid-bridge-lambda.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "APP": "pinboard",
            "STACK": "workflow",
            "STAGE": "TEST",
          },
        },
        "FunctionName": "pinboard-grid-bridge-lambda-TEST",
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "pinboardgridbridgelambdaServiceRole33502BD3",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "pinboardgridbridgelambdaServiceRole33502BD3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "pinboardgridbridgelambdaServiceRoleDefaultPolicyFB133D07": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/pinboard/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "pinboardgridbridgelambdaServiceRoleDefaultPolicyFB133D07",
        "Roles": Array [
          Object {
            "Ref": "pinboardgridbridgelambdaServiceRole33502BD3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "pinboardnotificationslambdaC35CECF7": Object {
      "DependsOn": Array [
        "pinboardnotificationslambdaServiceRoleDefaultPolicy623D6F0A",
        "pinboardnotificationslambdaServiceRole2F6EBFE9",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": "workflow-dist",
          "S3Key": "workflow/TEST/pinboard-notifications-lambda/pinboard-notifications-lambda.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "APP": "pinboard",
            "STACK": "workflow",
            "STAGE": "TEST",
          },
        },
        "FunctionName": "pinboard-notifications-lambda-TEST",
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "pinboardnotificationslambdaServiceRole2F6EBFE9",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 30,
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "pinboardnotificationslambdaSecurityGroupCE2444D9",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Object {
            "Ref": "pinboardPrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "pinboardnotificationslambdaSecurityGroupCE2444D9": Object {
      "Properties": Object {
        "GroupDescription": "Automatic security group for Lambda Function PinBoardStackTESTpinboardnotificationslambda3B7736D5",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "pinboardnotificationslambdaServiceRole2F6EBFE9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "pinboardnotificationslambdaServiceRoleDefaultPolicy623D6F0A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/pinboard/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "pinboardnotificationslambdaServiceRoleDefaultPolicy623D6F0A",
        "Roles": Array [
          Object {
            "Ref": "pinboardnotificationslambdaServiceRole2F6EBFE9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "pinboardusersrefresherlambda2D488032": Object {
      "DependsOn": Array [
        "pinboardusersrefresherlambdaServiceRoleDefaultPolicy0F8B88A3",
        "pinboardusersrefresherlambdaServiceRoleBF872882",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": "workflow-dist",
          "S3Key": "workflow/TEST/pinboard-users-refresher-lambda/pinboard-users-refresher-lambda.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "APP": "pinboard",
            "DATABASE_HOSTNAME": Object {
              "Fn::GetAtt": Array [
                "DatabaseDatabaseProxy537ACFCB",
                "Endpoint",
              ],
            },
            "STACK": "workflow",
            "STAGE": "TEST",
          },
        },
        "FunctionName": "pinboard-users-refresher-lambda-TEST",
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "pinboardusersrefresherlambdaServiceRoleBF872882",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 900,
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "DatabaseSecurityGroup7319C0F6",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Object {
            "Ref": "pinboardPrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "pinboardusersrefresherlambdaServiceRoleBF872882": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "pinboardusersrefresherlambdaServiceRoleDefaultPolicy0F8B88A3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::permissions-cache/TEST/*",
            },
            Object {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/pinboard/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    Object {
                      "Fn::Select": Array [
                        6,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Fn::GetAtt": Array [
                                "DatabaseDatabaseProxy537ACFCB",
                                "DBProxyArn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    Object {
                      "Ref": "DatabaseSecretAttachmentE5D1B020",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "pinboardusersrefresherlambdaServiceRoleDefaultPolicy0F8B88A3",
        "Roles": Array [
          Object {
            "Ref": "pinboardusersrefresherlambdaServiceRoleBF872882",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "pinboardusersrefresherlambdascheduleFULLRUNAllowEventRulePinBoardStackTESTpinboardusersrefresherlambda67CBC85C78BB95C7": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "pinboardusersrefresherlambda2D488032",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "pinboardusersrefresherlambdascheduleFULLRUNFB9A4F9E",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "pinboardusersrefresherlambdascheduleFULLRUNFB9A4F9E": Object {
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Runs the ",
              Object {
                "Ref": "pinboardusersrefresherlambda2D488032",
              },
              " every 24 hours, which should be a FULL RUN.",
            ],
          ],
        },
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "pinboardusersrefresherlambda2D488032",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "pinboardusersrefresherlambdascheduleisProcessPermissionChangesOnly403FC359": Object {
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Runs the ",
              Object {
                "Ref": "pinboardusersrefresherlambda2D488032",
              },
              " every minute, with 'isProcessPermissionChangesOnly: true'.",
            ],
          ],
        },
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "pinboardusersrefresherlambda2D488032",
                "Arn",
              ],
            },
            "Id": "Target0",
            "Input": "{\\"isProcessPermissionChangesOnly\\":true}",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "pinboardusersrefresherlambdascheduleisProcessPermissionChangesOnlyAllowEventRulePinBoardStackTESTpinboardusersrefresherlambda67CBC85CC07CF6DD": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "pinboardusersrefresherlambda2D488032",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "pinboardusersrefresherlambdascheduleisProcessPermissionChangesOnly403FC359",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "pinboardworkflowbridgelambda30D4AA22": Object {
      "DependsOn": Array [
        "pinboardworkflowbridgelambdarole04BA8EEA",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": "workflow-dist",
          "S3Key": "workflow/TEST/pinboard-workflow-bridge-lambda/pinboard-workflow-bridge-lambda.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "APP": "pinboard",
            "STACK": "workflow",
            "STAGE": "TEST",
            "WORKFLOW_DATASTORE_LOAD_BALANCER_DNS_NAME": Object {
              "Fn::ImportValue": "WorkflowDatastoreLoadBalancerDNSNameNewVpc-TEST",
            },
          },
        },
        "FunctionName": "pinboard-workflow-bridge-lambda-TEST",
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "pinboardworkflowbridgelambdarole04BA8EEA",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 5,
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::ImportValue": "WorkflowDatastoreLoadBalancerSecurityGroupIdNewVpc-TEST",
            },
          ],
          "SubnetIds": Object {
            "Fn::Split": Array [
              ",",
              Object {
                "Fn::ImportValue": "WorkflowPrivateSubnetIdsNewVpc-TEST",
              },
            ],
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "pinboardworkflowbridgelambdarole04BA8EEA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "pinboard",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "60.1.3",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/pinboard",
          },
          Object {
            "Key": "Stack",
            "Value": "workflow",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "workflowTESTpinboardA2C40456": Object {
      "DependsOn": Array [
        "InstanceRolePinboardDefaultPolicy66C92FE8",
        "InstanceRolePinboard534D1FFA",
      ],
      "Properties": Object {
        "LaunchTemplateData": Object {
          "IamInstanceProfile": Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "workflowTESTpinboardProfileE5BD154A",
                "Arn",
              ],
            },
          },
          "ImageId": Object {
            "Ref": "AMIPinboard",
          },
          "InstanceType": "t4g.nano",
          "MetadataOptions": Object {
            "HttpTokens": "required",
            "InstanceMetadataTags": "enabled",
          },
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "GuHttpsEgressSecurityGroupPinboardD9B9237E",
                "GroupId",
              ],
            },
            Object {
              "Fn::GetAtt": Array [
                "WazuhSecurityGroup",
                "GroupId",
              ],
            },
            Object {
              "Fn::GetAtt": Array [
                "DatabaseSecurityGroup7319C0F6",
                "GroupId",
              ],
            },
          ],
          "TagSpecifications": Array [
            Object {
              "ResourceType": "instance",
              "Tags": Array [
                Object {
                  "Key": "App",
                  "Value": "pinboard",
                },
                Object {
                  "Key": "gu:cdk:version",
                  "Value": "60.1.3",
                },
                Object {
                  "Key": "gu:repo",
                  "Value": "guardian/pinboard",
                },
                Object {
                  "Key": "Name",
                  "Value": "PinBoardStack-TEST/workflow-TEST-pinboard",
                },
                Object {
                  "Key": "Stack",
                  "Value": "workflow",
                },
                Object {
                  "Key": "Stage",
                  "Value": "TEST",
                },
              ],
            },
            Object {
              "ResourceType": "volume",
              "Tags": Array [
                Object {
                  "Key": "App",
                  "Value": "pinboard",
                },
                Object {
                  "Key": "gu:cdk:version",
                  "Value": "60.1.3",
                },
                Object {
                  "Key": "gu:repo",
                  "Value": "guardian/pinboard",
                },
                Object {
                  "Key": "Name",
                  "Value": "PinBoardStack-TEST/workflow-TEST-pinboard",
                },
                Object {
                  "Key": "Stack",
                  "Value": "workflow",
                },
                Object {
                  "Key": "Stage",
                  "Value": "TEST",
                },
              ],
            },
          ],
          "UserData": Object {
            "Fn::Base64": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "#!/bin/bash
mkdir -p $(dirname '/pinboard/startup.sh')
aws s3 cp 's3://",
                  Object {
                    "Ref": "DistributionBucketName",
                  },
                  "/workflow/TEST/pinboard/startup.sh' '/pinboard/startup.sh'
bash /pinboard/startup.sh pinboard-database-jump-host-ASG-TEST ",
                  Object {
                    "Ref": "AWS::Region",
                  },
                ],
              ],
            },
          },
        },
        "TagSpecifications": Array [
          Object {
            "ResourceType": "launch-template",
            "Tags": Array [
              Object {
                "Key": "App",
                "Value": "pinboard",
              },
              Object {
                "Key": "gu:cdk:version",
                "Value": "60.1.3",
              },
              Object {
                "Key": "gu:repo",
                "Value": "guardian/pinboard",
              },
              Object {
                "Key": "Name",
                "Value": "PinBoardStack-TEST/workflow-TEST-pinboard",
              },
              Object {
                "Key": "Stack",
                "Value": "workflow",
              },
              Object {
                "Key": "Stage",
                "Value": "TEST",
              },
            ],
          },
        ],
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "workflowTESTpinboardProfileE5BD154A": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "InstanceRolePinboard534D1FFA",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
  },
}
`;
